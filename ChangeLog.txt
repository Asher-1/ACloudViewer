v3.3.0 (LuDahai) - 06/06/2020
----------------------

- new features:

	* Edit > Polyline > Sample points
		- to regularly samples points on one or several polylines
	* Display > Camera Settings
		- to edit activated camera relevant parameters
	* Display > Auto Pick Pivot
		- auto pick rotation center when user left mouse button pressed. 

	* New set of geometrical features to compute on clouds:
		- Tools > Other > Compute geometric features
		- features are all based on locally computed eigen values:
			* sum of eigen values
			* omnivariance
			* eigenentropy
			* anisotropy
			* planarity
			* linearity
			* PCA1
			* PCA2
			* surface variation
			* sphericity
			* verticality
		- most of the features are defined in "Contour detection in unstructured 3D point clouds", Hackel et al, 2016

	* Localization support
		- Display > Language translation
		- currently supported languages:
			* English (default)
			* Chinese (partial)
		- volunteers are welcome: http://www.erow.cn

- enhancements:

	* Roughness, Density and Curvature can now all be computed via the new 'Tools > Other > Compute geometric features' menu
		(Approx density can't be computed anymore)

	* Global Shift & Scale dialog
		- new option "Preserve global shift on save" to directly control whether the global coordinates should be preserved
			at export time or simply forgotten

	* The 'Display > Lock vertical rotation' option has been renamed 'Display > Lock rotation about an axis' (Shortcut: L)
		- CC will now ask for the rotation axis to be locked (default: Z)

	* The M3C2 plugin can now be called from the command line:
		- the first time you'll need the configuration file saved with the GUI tool
			(Use the 'Save parameters to file' button in the bottom-left corner of the M3C2 dialog --> the floppy icon)
		- then load 2 files (cloud 1 and cloud2)
		- optionally load a 3rd cloud that will be used as core points
		- and eventually call the -M3C2 option with the parameter file as argument:
			ErowCloudViewer -O cloud1 -O cloud2 (-O core_points) -M3C2 parameters_file
		- new option to use the core points cloud normals (if any)

	* The Canupo plugin is now open-source!
		- Thanks (once again) to Dimitri Lague for this great contribution
		- the code is here: https://github.com/CloudCompare/CloudCompare/tree/master/plugins/core/qCanupo

	* The "Classify" option of the Canupo plugin can now be called from the command line:
		- you'll need a trained classifier (.prm file)
		- main option: -CANUPO_CLASSIFY classifier.prm
		- confidence threshold:
			* -USE_CONFIDENCE {threshold}  (threshold must be between 0 and 1)
			* (use the 'SET_ACTIVE_SF' after loading a cloud to set the active scalar field if
				you want it to be used to refine the classification)
		- syntax:
			ErowCloudViewer -O cloud1 ... -O cloudN -CANUPO_CLASSIFY (-USE_CONFIDENCE 0.9) classifier.prm

	* Labels can now be imported from ASCII files:
		- new column role in the ASCII loading dialog: "Labels"
		- labels can be created from textual or numerical columns
		- one "2D label" entity is created per point (don't try to load too many of them ;)
		- labels are displayed in 3D by default (i.e. next to each point), but they can also be displayed in 2D (see the dedicated check-box)

	* FBX units:
		- default FBX units are 'cm'
		- if a FBX file with other units is imported, CC will now store this information as meta-data and will set it correctly
			if the corresponding meshes are exported as FBX again

	* Command line mode:
		- scalar field convert to RGB:
			* '-SF_CONVERT_TO_RGB {mixWithExistingColors bool}'
		- scalar field set color scale:
			* '-SF_COLOR_SCALE {filename}'
		- extract all loaded mesh vertices as standalone 'clouds' (the mesh is discarded)
			* '-EXTRACT_VERTICES'
		- remove all scan grids
			* '-REMOVE_SCAN_GRIDS'
		- new sub-option of 'SAVE_CLOUDS' to set the output filename(s) (e.g. -SAVE_CLOUDS FILE "cloud1.bin cloud2.bin ..."
		- new options for the 'OCTREE_NORMALS' (thanks to Michael Barnes):
			* '-ORIENT' to specify a default orientation hint:
				- PLUS_ZERO
				- MINUS_ZERO
				- PLUS_BARYCENTER
				- MINUS_BARYCENTER
				- PLUS_X
				- MINUS_X
				- PLUS_Y
				- MINUS_Y
				- PLUS_Z
				- MINUS_Z
				- PREVIOUS
			* '-MODEL' to specify the local model:
				- LS
				- TRI
				- QUADRIC

	* Unroll tool:
		- the cylindrical unrolling can be performed inside an arbitrary angular range (between -3600 and +3600 degrees)
		- this means that the shape can be unrolled on more than 360 degrees, and from an arbitrary starting orientation

	* New options (Display > Display options):
		- the user can now control whether normals should be enabled on loaded clouds by default or not (default state is now 'off')
		- the user can now control whether load and save dialogs should be native ones or generic Qt dialogs

	* Normals:
		- ergonomics of 'Normals > compute' dialog have been (hopefully) enhanced
		- normals can now be oriented toward a sensor even if there's no grid associated to the point cloud.
		- the Normal Orientation algorithm based on the Minimum Spanning Tree now uses much less memory (~1/10)

	* PCV:
		- the PCV plugin can now be applied on several clouds (batch mode)

	* LAS I/O:
		- ErowCloudViewer can now read and save extra dimensions (for any file version)

	* E57:
		- the E57 plugin now uses [libE57Format] (https://github.com/asmaloney/libE57Format) which is a fork of the old E57RefImpl
		- if you compile ErowCloudViewer with the E57 plugin, you will need to use this new lib and change some CMake options to point at it - specifically **OPTION_USE_LIBE57FORMAT** and **LIBE57FORMAT_INSTALL_DIR**
		- the E57 plugin is now available on macOS

	* RDS (Riegl)
		- the reflectance scalar field read from RDS file should now have correct values (in dB)

	* SHP:
		- improved support thanks to T. Montaigu (saving and loading Multipatch entities, code refactoring, unit tests, etc.)

	* Cross section tool:
		- can now be started with a group of entities (no need to select the entities inside anymore)
		- produces less warnings

	* Plugins (General):
		- the "About Plugins" dialog was rewritten to provide more information about installed plugins and to include I/O and GL plugins.
		- [macOS] the "About Plugins..." menu item was moved from the Help menu to the Application menu.
		- added several fields to the plugin interface: authors, maintainers, and reference links.
		- I/O plugins now have the option to return a list of filters using a new method *getFilters()* (so one plugin can handle multiple file extensions)
		- moved support for several less frequently used file formats to a new plugin called qAdditionalIO
			- Snavely's Bundler output (*.out)
			- Clouds + calibrated images [meta][ascii] (*.icm)
			- Point + Normal cloud (*.pn)
			- Clouds + sensor info. [meta][ascii] (*.pov)
			- Point + Value cloud (*.pv)
			- Salome Hydro polylines (*.poly)
			- SinusX curve (*.sx)
			- Mensi Soisic cloud (*.soi)

	* Misc:
		- some loading dialogs 'Apply all' button will only apply to the set of selected files (ASCII, PLY and LAS)
		- the trace polyline tool will now use the Global Shift & Scale information of the first clicked entity
		- when calling the 'Edit > Edit Shift & Scale' dialog, the precision of the fields of the shift vector is now 6 digits
			(so as to let the user manually "geo-reference" a cloud)
		- the ASCII loading dialog can now load up to 512 columns (i.e. almost as many scalar fields ;). And it shouldn't become huge if
			there are too many columns or characters in the header line!

- bug fixes:

	* subsampling with a radius dependent on the active scalar field could make CC stall when dealing with negative values
	* point picking was performed on each click, even when double-clicking. This could actually prevent the double-click from
		being recognized as such (as the picking could be too slow!)
	* command line mode: when loading at least two LAS files with the 'GLOBAL_SHIFT AUTO' option, if the LAS files had different AND small LAS Shift
	* point picking on a mesh (i.e. mainly in the point-pair based registration tool) could select the wrong point on the triangle, or even a wrong triangle
	* raster I/O: when importing a raster file, the corresponding point cloud was shifted of half a pixel
	* the RASTERIZE command line could make CC crash at the end of the process
	* hitting the 'Apply all' button of the ASCII open dialog would not restore the previous load configuration correctly in all cases
		(the header line may not be extracted the second time, etc.)
	* align tool: large coordinates of manually input points were rounded off (only when displayed)
	* when applying an orthographic viewport while the 'stereo' mode is enabled, the stereo mode was broken (now a warning message is displayed and
		the stereo mode is automatically disabled)
	* the global shift along vertical dimension (e.g. Z) was not applied when exporting a raster grid to a raster file (geotiff)
	* the 2.5D Volume calculation tool was ignoring the strategy for filling the empty cells of the 'ceil' cloud (it was always using the 'ground' setting)
	* [macOS] fixed the squished text in the Matrix and Axis/Angle sections of the transformation history section of the properties
	* [macOS] fixed squished menus in the properties editor
	* the application options (i.e. only whether the normals should be displayed or not at loading time) were not saved!
	* DXF files generated by the qSRA plugin were broken (same bug as the DXF filter in version 2.9)
	* the OCTREE_NORMALS command was saving a file whatever the state of the AUTO_SAVE option
	* the Align tools could make CC crash when applying the alignment matrix (if the octree below the aligned entity was visible in the DB tree)
	* the clouds and contour lines generated by the Rasterize tool were shifted of half a cell
	* in some cases, merging a mesh with materials with a mesh without could make CC crash
	* command line mode: the VOLUME command parser would loop indefinitely if other commands were appended after its own options + it was ignoring the AUTO_SAVE state.
	* some files saved with version 2.6 to 2.9 and containing quadric primitives or projective camera sensors could not be loaded properly since the version 2.10.alpha of May 2018
	* for a mysterious reason, the FWF_SAVE_CLOUDS command was not accessible anymore...
	* when computing C2C distances, and using both a 2.5D Triangulation local model and the 'split distances along X, Y and Z' option, the split distances could be wrong in some times
