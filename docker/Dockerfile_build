ARG CLOUDVIEWER_VERSION
ARG VTK_VERSION
ARG PCL_VERSION
ARG CUDA_VERSION
ARG UBUNTU_VERSION
FROM cloudviewer-deps:${CLOUDVIEWER_VERSION}-ubuntu${UBUNTU_VERSION}-cuda${CUDA_VERSION}
LABEL maintainer="AliceVision Team ludahai19@163.com"

# Env vars for the nvidia-container-runtime.
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all

# Miniconda requires bash as the default shell.
SHELL ["/bin/bash", "-c"]

ENV ACloudViewer_DEV=/root \
    ACloudViewer_BUILD=/root/ACloudViewer/build \
    ACloudViewer_INSTALL=/root/install

# ENV QT_DIR=/opt/Qt5.14.2/5.14.2/gcc_64
# ENV LD_LIBRARY_PATH="/opt/Qt5.14.2/5.14.2/gcc_64/lib:$LD_LIBRARY_PATH"

ENV PATH="/root/miniconda3/bin:$PATH"
ENV CLOUDVIEWER_ML_ROOT=/root/CloudViewer-ML
RUN git clone https://github.com/Asher-1/CloudViewer-ML.git ${CLOUDVIEWER_ML_ROOT}

COPY . ${ACloudViewer_DEV}/ACloudViewer
WORKDIR ${ACloudViewer_DEV}/ACloudViewer

RUN mkdir -p ${ACloudViewer_INSTALL}

# Build cloudViewer wheels for python3.8-3.11
RUN rm -rf ${ACloudViewer_BUILD}/* && ./docker/build_cloudviewer_whl.sh 3.8
RUN rm -rf ${ACloudViewer_BUILD}/* && ./docker/build_cloudviewer_whl.sh 3.9
RUN rm -rf ${ACloudViewer_BUILD}/* && ./docker/build_cloudviewer_whl.sh 3.10
RUN rm -rf ${ACloudViewer_BUILD}/* && ./docker/build_cloudviewer_whl.sh 3.11

# Build ACloudViewer app installer
RUN rm -rf ${ACloudViewer_BUILD}/* && ./docker/build_gui_app.sh 3.11

WORKDIR ${ACloudViewer_DEV}/ACloudViewer

# EXPOSE 22 4000
# ENTRYPOINT ["/nxserver.sh"]