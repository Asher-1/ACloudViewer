name: Ubuntu CUDA
permissions: {}

on:
  workflow_dispatch:
    inputs:
      developer_build:
        description: 'Set to OFF for Release packages.'
        required: false
        default: 'ON'
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GCE_GPU_CI_SA: ${{ secrets.GCE_GPU_CI_SA }}
  GCE_CLI_GHA_VERSION: "416.0.0"
  DEVELOPER_BUILD: ${{ github.event.inputs.developer_build || 'ON' }}

jobs:
  skip-check:
    runs-on: ubuntu-latest
    name: Skip job for forks
    permissions:
      contents: read
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
      - name: Skip check
        id: check
        run: |
          if [ "${GITHUB_REPOSITORY}" == "Asher-1/ACloudViewer" ] && [ -n "${GCE_GPU_CI_SA}" ] ; then
            echo "Secrets available: performing GCE test"
            echo "skip=no" >> $GITHUB_OUTPUT
          else
            echo "Secrets not available: skipping GCE test"
            echo "skip=yes" >> $GITHUB_OUTPUT
          fi

  build-and-run-docker:
    name: Build and run
    permissions:
      contents: write   # upload
    runs-on: ubuntu-latest
    needs: [skip-check]
    if: needs.skip-check.outputs.skip == 'no'
    strategy:
      fail-fast: false
      matrix:
        include:
          - CI_CONFIG: 2-focal
          - CI_CONFIG: 5-ml-jammy
    env:
      # Export everything from matrix to be easily used.
      # Docker tag and ccache names must be consistent with docker_build.sh
      CI_CONFIG          : ${{ matrix.CI_CONFIG }}
      BUILD_PACKAGE      : true
      GCE_INSTANCE_PREFIX: cloudviewer-ci-${{ matrix.CI_CONFIG }}
      DOCKER_TAG         : cloudviewer-ci:${{ matrix.CI_CONFIG }}
      CCACHE_TAR_NAME    : cloudviewer-ci-${{ matrix.CI_CONFIG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'false'
      - name: build docker
        run: |
          # GITHUB_WORKSPACE: /home/runner/work/ACloudViewer/ACloudViewer
          cd "${GITHUB_WORKSPACE}/.."
          if [ "${BUILD_PACKAGE}" == "true" ] && [ "$DEVELOPER_BUILD" == "OFF" ]; then
            export RELEASE_TAG="-release"
          fi
          ACloudViewer/docker/docker_build.sh ${CI_CONFIG}${RELEASE_TAG:-}
          mv /cloudViewer-devel-linux*.tar.xz "$PWD"
          ls -alh

      - name: Upload package
        if: ${{ env.BUILD_PACKAGE == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: cloudViewer-devel-linux-x86_64-cuda-${{ matrix.CI_CONFIG }}
          path: cloudViewer-devel-linux*.tar.xz
          if-no-files-found: error

      - name: Update devel release
        if: ${{ github.ref == 'refs/heads/main' && env.BUILD_PACKAGE == 'true' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload main-devel cloudViewer-devel-linux-*.tar.xz --clobber
          gh release view main-devel

      - name: run docker
        run: |
          cd "${GITHUB_WORKSPACE}/.."
          ACloudViewer/docker/docker_test.sh ${CI_CONFIG}

      # - name: ccache upload
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   run: |
      #     cp ${CCACHE_TAR_NAME}.tar.gz "$PWD"