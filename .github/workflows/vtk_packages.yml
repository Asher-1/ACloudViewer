name: VTK Packages
permissions: {}

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.11
  CONDA_DEP_FILE_CLOUDVIEWER: ".ci/conda_qt.yml"

jobs:

  Linux:
    permissions:
      contents: write
    # TODO: Convert to docker
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        BUILD_SHARED_LIBS: [OFF]
        include:
          # - BUILD_SHARED_LIBS: ON
          #   ARCHIVE_SUFFIX: "shared"
          - BUILD_SHARED_LIBS: OFF
            ARCHIVE_SUFFIX: "static"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          ./util/install_deps_ubuntu.sh assume-yes
          sudo apt-get install -qy libjpeg-dev libpng-dev libtiff-dev libhdf5-dev libtbb-dev
          
      - name: Set up Python version
        run: |
          sed -i "s/3.8/${{ env.PYTHON_VERSION }}/g" ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}
      - name: Set up Python version
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: qt_env
          auto-activate-base: false
          environment-file: ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}

      - name: CMake configure
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake -DBUILD_WITH_CONDA=ON -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }} ../3rdparty/vtk
      - name: Build
        shell: bash -l {0}
        run: |
          cd build
          make -j$(nproc)
          cmake -E sha256sum vtk*.tar.gz > checksum_linux_${{matrix.ARCHIVE_SUFFIX}}.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vtk_linux_${{matrix.ARCHIVE_SUFFIX}}
          path: |
            build/vtk*.tar.gz
            build/checksum*.txt
          if-no-files-found: error

  Windows:
    permissions:
      contents: write
    runs-on: windows-2022
    env:
      SRC_DIR: "D:\\a\\ACloudViewer\\ACloudViewer"
      BUILD_DIR: "C:\\ACloudViewer\\build"
      NPROC: 2
    strategy:
      fail-fast: false
      matrix:
        configuration: [dllrt, staticrt]
        BUILD_SHARED_LIBS: [ON, OFF]
        include:
          - configuration: dllrt
            STATIC_RUNTIME: OFF
          - configuration: staticrt
            STATIC_RUNTIME: ON
            BUILD_SHARED_LIBS: OFF
          - BUILD_SHARED_LIBS: ON
            ARCHIVE_SUFFIX: "shared"
          - BUILD_SHARED_LIBS: OFF
            ARCHIVE_SUFFIX: "static"
          
    steps:
      - name: Disk space used
        run: Get-PSDrive
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up python version
        run: |
          (Get-Content ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}) -replace "3.8", "${{ env.PYTHON_VERSION }}" | Set-Content ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}
      # DGM: without caching, using conda on Windows takes a long time...
      - name: Set up Python environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          architecture: 'x64'
          activate-environment: qt_env
          auto-activate-base: false
          environment-file: ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}

      - name: Config
        # Move build directory to C: https://github.com/actions/virtual-environments/issues/1341
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -Path ${{ env.BUILD_DIR }} -ItemType Directory
          cd ${{ env.BUILD_DIR }}
          cmake -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_INSTALL_PREFIX="C:\Program Files\ACloudViewer" `
            -DSTATIC_WINDOWS_RUNTIME=${{ matrix.STATIC_RUNTIME }} `
            -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }} `
            -DBUILD_WITH_CONDA=ON `
            "${{ env.SRC_DIR }}\3rdparty\vtk"
          ls
      - name: Build
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          cmake --build . --parallel ${{ env.NPROC }} --config Release
          ls
          cmake --build . --parallel ${{ env.NPROC }} --config Debug
          ls
          cmake -E sha256sum (get-item vtk*.tar.gz).Name > checksum_win_${{matrix.configuration}}_${{matrix.ARCHIVE_SUFFIX}}.txt
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: vtk_windows_${{matrix.configuration}}_${{matrix.ARCHIVE_SUFFIX}}
          path: |
            ${{ env.BUILD_DIR }}/vtk*.tar.gz
            ${{ env.BUILD_DIR }}/checksum*.txt
          if-no-files-found: error

  MacOS:
    permissions:
      contents: write
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        BUILD_SHARED_LIBS: [OFF]
        include:
          # - BUILD_SHARED_LIBS: ON
          #   ARCHIVE_SUFFIX: "shared"
          - BUILD_SHARED_LIBS: OFF
            ARCHIVE_SUFFIX: "static"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python version
        run: |
          sed -i "" "s/3.8/${{ env.PYTHON_VERSION }}/g" ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}
      - name: Set up Python version
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: qt_env
          auto-activate-base: false
          environment-file: ${{ env.CONDA_DEP_FILE_CLOUDVIEWER }}

      - name: CMake configure
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 -DBUILD_WITH_CONDA=ON -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }} ../3rdparty/vtk
      - name: Build
        shell: bash -l {0}
        run: |
          cd build
          make -j2
          cmake -E sha256sum vtk*.tar.gz > checksum_macos_${{matrix.ARCHIVE_SUFFIX}}.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vtk_macos_${{matrix.ARCHIVE_SUFFIX}}
          path: |
            build/vtk*.tar.gz
            build/checksum*.txt
          if-no-files-found: error
