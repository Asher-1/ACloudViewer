// ----------------------------------------------------------------------------
// -                        CloudViewer: www.cloudViewer.org                  -
// ----------------------------------------------------------------------------
// Copyright (c) 2018-2024 www.cloudViewer.org
// SPDX-License-Identifier: MIT
// ----------------------------------------------------------------------------

#ifndef ECV_PLY_OPEN_DIALOG
#define ECV_PLY_OPEN_DIALOG

// GUIs generated by Qt Designer
#include <ui_openPlyFileDlg.h>

// Qt
#include <QStringList>

// system
#include <vector>

class QComboBox;
struct PlyLoadingContext;

//! Dialog for configuration of PLY files opening sequence
class PlyOpenDlg : public QDialog, public Ui::PlyOpenDlg {
    Q_OBJECT

public:
    explicit PlyOpenDlg(QWidget* parent = 0);

    void setDefaultComboItems(const QStringList& stdPropsText);
    void setListComboItems(const QStringList& listPropsText);
    void setSingleComboItems(const QStringList& singlePropsText);

    //! Standard comboboxes
    std::vector<QComboBox*> m_standardCombos;
    //! List-related comboboxes (faces, etc.)
    std::vector<QComboBox*> m_listCombos;
    //! Single-related comboboxes (texture index, etc.)
    std::vector<QComboBox*> m_singleCombos;
    //! SF comboboxes
    std::vector<QComboBox*> m_sfCombos;

    //! Returns whether the current configuration is valid or not
    bool isValid(bool displayErrors = true) const;

    //! Restores the previously saved configuration (if any)
    /** \param hasAPreviousContext returns whether a previous context is stored
            \return whether the previous context can be restored or not
    **/
    bool restorePreviousContext(bool& hasAPreviousContext);

    //! Resets the "apply all" flag (if set)
    static void ResetApplyAll();

    //! Returns whether the dialog can be 'skipped'
    /** i.e. 'Apply all' button has been previously clicked
            and the configuration is valid.
    **/
    bool canBeSkipped() const;

public slots:
    void addSFComboBox(int selectedIndex = 0);

protected slots:
    void apply();
    void applyAll();

signals:
    void fullyAccepted();

protected:
    //! Saves current configuration (for internal use)
    void saveContext(PlyLoadingContext* context);
    //! Restore a previously saved configuration (for internal use)
    bool restoreContext(PlyLoadingContext* context,
                        int& unassignedProps,
                        int& mismatchProps);

    //! Standard comboboxes elements
    QStringList m_stdPropsText;
    //! List-related comboboxes elements
    QStringList m_listPropsText;
    //! Single-related comboboxes elements
    QStringList m_singlePropsText;
};

#endif  // ECV_PLY_OPEN_DIALOG
